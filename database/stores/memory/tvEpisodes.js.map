{"version":3,"file":"tvEpisodes.js","sourceRoot":"","sources":["tvEpisodes.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,MAAM,WAAW,CAAC;AAKxD,MAAM,uBAAuB;IAG3B;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAa,CAAC;IACtC,CAAC;IAED,MAAM,CAAC,SAAoB;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAEK,QAAQ,CAAC,WAAiB;;YAC9B,IAAI,CAAC;gBACH,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAChD,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,IAAI,KAAK,YAAY,QAAQ,EAAE,CAAC;oBAC9B,MAAM,IAAI,iBAAiB,CAAC,WAAW,CAAC,CAAC;gBAC3C,CAAC;gBAED,MAAM,KAAK,CAAC;YACd,CAAC;QACH,CAAC;KAAA;IAEK,gBAAgB,CAAC,UAAgB,EAAE,UAAwB,EAAE;;YACjE,OAAO,CAAC,KAAK,GAAG,EAAE,UAAU,EAAE,CAAC;YAE/B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC;KAAA;IAEK,iBAAiB,CAAC,UAAgB;;YACtC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;QAC1C,CAAC;KAAA;CACF;AAED,eAAe,uBAAuB,CAAA","sourcesContent":["import Store from './store';\nimport { NotFound, TVEpisodeNotFound } from '../errors';\nimport { TVEpisode } from '../../../app/moviesFreak/entities';\nimport { UUID } from '../../../types/common';\nimport { QueryOptions } from '../../../types/database';\n\nclass InMemoryTVEpisodesStore {\n  private store: Store<TVEpisode>;\n\n  constructor() {\n    this.store = new Store<TVEpisode>();\n  }\n\n  create(tvEpisode: TVEpisode) {\n    return this.store.create(tvEpisode);\n  }\n\n  async findById(tvEpisodeId: UUID) {\n    try {\n      return await this.store.findById(tvEpisodeId);\n    } catch (error: any) {\n      if (error instanceof NotFound) {\n        throw new TVEpisodeNotFound(tvEpisodeId);\n      }\n\n      throw error;\n    }\n  }\n\n  async findByTVSeasonId(tvSeasonId: UUID, options: QueryOptions = {}) {\n    options.query = { tvSeasonId };\n\n    return this.store.find(options);\n  }\n\n  async countByTVSeasonId(tvSeasonId: UUID) {\n    return this.store.count({ tvSeasonId });\n  }\n}\n\nexport default InMemoryTVEpisodesStore\n"]}