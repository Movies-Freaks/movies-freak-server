{"version":3,"file":"store.js","sourceRoot":"","sources":["store.ts"],"names":[],"mappings":"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","sourcesContent":["import { cloneDeep, get as getKey} from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\nimport { Entity } from '../../../types/entities';\nimport { Json, UUID } from '../../../types/common';\nimport { NotFound } from '../errors';\nimport { QueryOptions, QueryResponse } from '../../../types/database';\n\nclass Store<T extends Entity> {\n  private items: {\n    [key: UUID]: T\n  };\n\n  constructor() {\n    this.items = {};\n  }\n\n  async create(entity: T): Promise<T> {\n    const entityToSave = cloneDeep(entity);\n    const entityId = uuid();\n\n    Object.assign(\n      entityToSave,\n      {\n        _id: entityId,\n        _createdAt: new Date(),\n        _updatedAt: new Date()\n      }\n    );\n\n    this.items[entityId] = entityToSave;\n\n    return cloneDeep(entityToSave);\n  }\n\n  async update(entity: T): Promise<T> {\n    if (!entity.id || !this.items[entity.id]) {\n      throw new NotFound({ id: entity.id });\n    }\n\n    entity.updatedAt = new Date();\n\n    this.items[entity.id] = cloneDeep(entity);\n\n    return cloneDeep(entity);\n  }\n\n  async findById(entityId: UUID): Promise<T> {\n    const entity = this.items[entityId];\n\n    if (!entity) {\n      throw new NotFound(entityId);\n    }\n\n    return cloneDeep(entity);\n  }\n\n  async find(options: QueryOptions = {}): Promise<QueryResponse<T>> {\n    const query: Json = options.query || {};\n    const items = Object.values(this.items);\n    const skip = options.skip || 0;\n    const limit = skip + (options.limit || items.length - 1);\n\n    const result = applyFilter<T>(items, query);\n\n    return {\n      items: result.slice(skip, limit),\n      totalItems: await this.count(query)\n    };\n  }\n\n  async findOne(query: {}): Promise<T> {\n    const items = Object.values(this.items)\n      .sort((a: any, b: any) => b.createdAt - a.createdAt);\n\n    const [entity] = applyFilter<T>(items, query);\n\n    if (!entity) {\n      throw new NotFound(query);\n    }\n\n    return cloneDeep(entity);\n  }\n\n  async count(query = {}) {\n    const items = Object.values(this.items);\n\n    return applyFilter<T>(items, query)\n      .length;\n  }\n}\n\nfunction applyFilter<T>(data: T[], filter: Json) {\n  const items = cloneDeep(data);\n\n  return items.filter((item) => {\n    return Object.keys(filter)\n      .reduce(\n        (succeed, key) => succeed && getKey(filter, key) === getKey(item, key),\n        true\n      );\n  });\n}\n\nexport default Store;\n"]}