{"version":3,"file":"films.js","sourceRoot":"","sources":["films.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAE5B,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;AAInD,MAAM,kBAAkB;IAGtB;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,IAAU;QACf,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEK,QAAQ,CAAC,MAAY;;YACzB,IAAI,CAAC;gBACH,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAC3C,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,IAAI,KAAK,YAAY,QAAQ,EAAE,CAAC;oBAC9B,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;gBACjC,CAAC;gBAED,MAAM,KAAK,CAAC;YACd,CAAC;QACH,CAAC;KAAA;IAED,IAAI,CAAC,UAAwB,EAAE;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;CACF;AAED,eAAe,kBAAkB,CAAC","sourcesContent":["import Store from './store';\nimport { Film } from '../../../app/moviesFreak/entities';\nimport { FilmNotFound, NotFound } from '../errors';\nimport { QueryOptions } from '../../../types/database';\nimport { UUID } from '../../../types/common';\n\nclass InMemoryFilmsStore {\n  private store: Store<Film>;\n\n  constructor() {\n    this.store = new Store();\n  }\n\n  create(film: Film) {\n    return this.store.create(film);\n  }\n\n  async findById(filmId: UUID) {\n    try {\n      return await this.store.findById(filmId);\n    } catch (error: any) {\n      if (error instanceof NotFound) {\n        throw new FilmNotFound(filmId);\n      }\n\n      throw error;\n    }\n  }\n\n  find(options: QueryOptions = {}) {\n    return this.store.find(options);\n  }\n}\n\nexport default InMemoryFilmsStore;\n"]}