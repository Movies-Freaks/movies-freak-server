{"version":3,"file":"tvSeasons.js","sourceRoot":"","sources":["tvSeasons.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAC5B,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,WAAW,CAAC;AAKvD,MAAM,qBAAqB;IAGzB;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAY,CAAC;IACrC,CAAC;IAED,MAAM,CAAC,QAAkB;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAEK,QAAQ,CAAC,UAAgB;;YAC7B,IAAI,CAAC;gBACH,OAAO,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAC/C,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,IAAI,KAAK,YAAY,QAAQ,EAAE,CAAC;oBAC9B,MAAM,IAAI,gBAAgB,CAAC,UAAU,CAAC,CAAC;gBACzC,CAAC;gBAED,MAAM,KAAK,CAAC;YACd,CAAC;QACH,CAAC;KAAA;IAEK,eAAe,CAAC,SAAe,EAAE,UAAwB,EAAE;;YAChE,OAAO,CAAC,KAAK,GAAG,EAAE,SAAS,EAAE,CAAC;YAE9B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;KAAA;IAEK,gBAAgB,CAAC,SAAe;;YACpC,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC;QACzC,CAAC;KAAA;CACF;AAED,eAAe,qBAAqB,CAAC","sourcesContent":["import Store from './store';\nimport { NotFound, TVSeasonNotFound } from '../errors';\nimport { TVSeason } from '../../../app/moviesFreak/entities';\nimport { UUID } from '../../../types/common';\nimport { QueryOptions } from '../../../types/database';\n\nclass InMemoryTVSeasonStore {\n  private store: Store<TVSeason>;\n\n  constructor() {\n    this.store = new Store<TVSeason>();\n  }\n\n  create(tvSeason: TVSeason) {\n    return this.store.create(tvSeason);\n  }\n\n  async findById(tvSeasonId: UUID) {\n    try {\n      return await this.store.findById(tvSeasonId);\n    } catch (error: any) {\n      if (error instanceof NotFound) {\n        throw new TVSeasonNotFound(tvSeasonId);\n      }\n\n      throw error;\n    }\n  }\n\n  async findByTVSerieId(tvSerieId: UUID, options: QueryOptions = {}) {\n   options.query = { tvSerieId };\n\n   return this.store.find(options);\n  }\n\n  async countByTVSerieId(tvSerieId: UUID) {\n    return this.store.count({ tvSerieId });\n  }\n}\n\nexport default InMemoryTVSeasonStore;\n"]}