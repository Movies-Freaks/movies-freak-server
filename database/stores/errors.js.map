{"version":3,"file":"errors.js","sourceRoot":"","sources":["errors.ts"],"names":[],"mappings":"AAIA,MAAM,OAAO,aAAc,SAAQ,KAAK;IAItC,YAAY,OAA4B,EAAE;QACxC,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,+BAA+B,CAAC,CAAC;QAEvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC;IAC9B,CAAC;CACF;AAED,MAAM,OAAO,QAAS,SAAQ,aAAa;IAGzC,YAAY,KAAS;QACnB,KAAK,CAAC;YACJ,OAAO,EAAE,8BAA8B;YACvC,IAAI,EAAE,EAAE,KAAK,EAAE;SAChB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF;AAED,MAAM,OAAO,YAAa,SAAQ,QAAQ;CAAG;AAC7C,MAAM,OAAO,eAAgB,SAAQ,QAAQ;CAAG;AAChD,MAAM,OAAO,iBAAkB,SAAQ,QAAQ;CAAG;AAClD,MAAM,OAAO,eAAgB,SAAQ,QAAQ;CAAG;AAChD,MAAM,OAAO,gBAAiB,SAAQ,QAAQ;CAAG;AACjD,MAAM,OAAO,YAAa,SAAQ,QAAQ;CAAG;AAE7C,MAAM,OAAO,kBAAmB,SAAQ,aAAa;CAAG;AACxD,MAAM,OAAO,qBAAsB,SAAQ,aAAa;CAAG;AAE3D,MAAM,OAAO,mBAAoB,SAAS,aAAa;IACrD,YAAY,MAAe;QACzB,MAAM,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEtC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAClB,CAAC;CACF","sourcesContent":["import { DatabaseErrorParams } from '../../types/database';\nimport { Json } from '../../types/common';\n\n\nexport class DatabaseError extends Error {\n  readonly cause?: Json;\n  readonly info?: Json;\n\n  constructor(args: DatabaseErrorParams = {}) {\n    super(args.message || 'Something unexpected happened');\n\n    this.name = args.name || this.constructor.name;\n    this.cause = args.error;\n    this.info = args.info || {};\n  }\n}\n\nexport class NotFound extends DatabaseError {\n  readonly query: {};\n\n  constructor(query: {}) {\n    super({\n      message: 'Record not found on database',\n      info: { query }\n    });\n\n    this.query = query;\n  }\n}\n\nexport class FilmNotFound extends NotFound {}\nexport class SessionNotFound extends NotFound {}\nexport class TVEpisodeNotFound extends NotFound {}\nexport class TVSerieNotFound extends NotFound {}\nexport class TVSeasonNotFound extends NotFound {}\nexport class UserNotFound extends NotFound {}\n\nexport class EmailAlreadyExists extends DatabaseError {}\nexport class UsernameAlreadyExists extends DatabaseError {}\n\nexport class IMDBIdAlreadyExists extends  DatabaseError {\n  constructor(imdbId?: string) {\n    const info = imdbId ? { imdbId } : {};\n\n    super({ info });\n  }\n}\n"]}