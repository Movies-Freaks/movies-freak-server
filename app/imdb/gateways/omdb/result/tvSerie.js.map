{"version":3,"file":"tvSerie.js","sourceRoot":"","sources":["tvSerie.ts"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,QAAQ,CAAC;AAChC,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAErD,MAAM,iBAAkB,SAAQ,UAAU;IACxC,YAAY,WAAgB;QAC1B,KAAK,CAAC,WAAW,CAAC,CAAC;QAEnB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,KAAK;QACP,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAExD,OAAO,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC;IAED,IAAI,UAAU;QACZ,MAAM,MAAM,GAAG;YACb,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE;YACnB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE;YACnB,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE;SACpB,CAAC;QAEF,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,GAAiC,IAAI,CAAC,eAAe;aAC1E,QAAQ;aACR,KAAK,CAAC,GAAG,CAAC,CAAC;QAEd,OAAO,IAAI,IAAI,CACb,MAAM,CAAC,IAAI,CAAC,EACZ,MAAM,CAAC,KAAK,CAAC,EACb,MAAM,CAAC,GAAG,CAAC,CACZ,CAAC;IACJ,CAAC;IAED,IAAI,YAAY;QACd,OAAO,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IACnD,CAAC;IAED,OAAO;QACL,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,eAAe,iBAAiB,CAAC","sourcesContent":["import OMDBResult from './omdb';\nimport { IMDBMonth } from '../../../../../types/app';\n\nclass OMDBTVSerieResult extends OMDBResult {\n  constructor(rawResponse: any) {\n    super(rawResponse);\n\n    this.type = 'serie';\n  }\n\n  get years() {\n    const [from, to] = this.currentResponse.Year.split('â€“');\n\n    return { from, to };\n  }\n\n  get releasedAt() {\n    const months = {\n      [IMDBMonth.JAN]: 1,\n      [IMDBMonth.FEB]: 2,\n      [IMDBMonth.MAR]: 3,\n      [IMDBMonth.APR]: 4,\n      [IMDBMonth.MAY]: 5,\n      [IMDBMonth.JUN]: 6,\n      [IMDBMonth.JUL]: 7,\n      [IMDBMonth.AUG]: 8,\n      [IMDBMonth.SEP]: 9,\n      [IMDBMonth.OCT]: 10,\n      [IMDBMonth.NOV]: 11,\n      [IMDBMonth.DEC]: 12\n    };\n\n    const [day, month, year] : [string, IMDBMonth, string] = this.currentResponse\n      .Released\n      .split(' ');\n\n    return new Date(\n      Number(year),\n      months[month],\n      Number(day)\n    );\n  }\n\n  get totalSeasons() {\n    return Number(this.currentResponse.totalSeasons);\n  }\n\n  isMovie() {\n    return false;\n  }\n\n  isSerie() {\n    return true;\n  }\n}\n\nexport default OMDBTVSerieResult;\n"]}