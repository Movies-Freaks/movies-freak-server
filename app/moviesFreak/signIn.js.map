{"version":3,"file":"signIn.js","sourceRoot":"","sources":["signIn.ts"],"names":[],"mappings":"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","sourcesContent":["import { Database } from '../../types/database';\nimport { Session } from './entities';\nimport {\n  CouldNotSignIn,\n  InvalidPassword,\n  UserNotFound\n} from './errors';\nimport {\n  UserNotFound as DatabaseUserNotFound,\n  SessionNotFound\n} from '../../database/stores/errors';\n\nclass SignIn {\n  database: Database;\n  username: string;\n  password: string;\n\n  constructor(database: Database, username: string, password: string) {\n    this.database = database;\n    this.username = username;\n    this.password = password;\n  }\n\n  async execute() {\n    let user = await this.findUserByEmail();\n\n    if (!user) {\n      user = await this.findUserByUsername();\n    }\n\n    if (!user || !user.id) {\n      throw new UserNotFound();\n    }\n\n    if (!user.doesPasswordMatch(this.password)) {\n      throw new InvalidPassword(this.password);\n    }\n\n    let session: Session;\n\n    try {\n      session = await this.database.sessions.findActiveByUserId(user.id);\n    } catch (error: any) {\n      if (!(error instanceof SessionNotFound)) {\n        throw new CouldNotSignIn(error);\n      }\n\n      session = new Session({ user });\n    }\n\n    session.generateToken()\n      .activateToken();\n\n    try {\n      if (session.id) {\n        return await this.database.sessions.update(session);\n      }\n\n      return await this.database.sessions.create(session);\n    } catch (error: any) {\n      throw new CouldNotSignIn(error);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  private async findUserByEmail() {\n    try {\n      return await this.database.users.findByEmail(this.username);\n    } catch (error: any) {\n      if (!(error instanceof DatabaseUserNotFound)) {\n        throw new CouldNotSignIn(error);\n      }\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  async findUserByUsername() {\n    try {\n      return await this.database.users.findByUsername(this.username);\n    } catch (error: any) {\n      if (!(error instanceof DatabaseUserNotFound)) {\n        throw new CouldNotSignIn(error);\n      }\n    }\n  }\n}\n\nexport default SignIn;\n"]}