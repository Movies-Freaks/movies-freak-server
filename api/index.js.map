{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,sBAAsB,CAAC;AAG9B,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAGnD,OAAO,cAAc,MAAM,gBAAgB,CAAC;AAC5C,OAAO,UAAU,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAC;AAI/D,MAAM,iBAAkB,SAAQ,KAAK;CAAG;AACxC,MAAM,gBAAiB,SAAQ,KAAK;CAAG;AAQvC,MAAM,yBAAyB,GAAG;IAChC,QAAQ;IACR,OAAO;IACP,OAAO;IACP,SAAS;IACT,UAAU;CACX,CAAC;AAID,CAAC;AAEF,MAAM,SAAS,GAAc,EAAE,CAAC;AAEhC,MAAM,cAAc;IAOlB,YAAY,QAAkB,EAAE,WAAwB;QACtD,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QAErB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QAEnC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;QAC7B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;QACrB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YACtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACxC,CAAC;QAED,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;QAExC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QAEjC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,IAAY,EAAE,IAAY;QAC9B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE;YAC/B,sCAAsC;YACtC,OAAO,CAAC,GAAG,CAAC,oCAAoC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEO,QAAQ;QACd,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;QAEhD,cAAc,CAAC,QAAQ,EAAE,CAAC;IAC5B,CAAC;IAED,gBAAgB,CAAC,YAAoB,EAAE,gBAA0B,EAAE,cAA0B,EAAE;QAC7F,MAAM,CAAC,QAAQ,EAAE,IAAI,GAAG,EAAE,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEtD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC;YACzB,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QAC3B,CAAC;QAED,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC;YACvB,IAAI;YACJ,gBAAgB;YAChB,WAAW;SACZ,CAAC,CAAC;IACL,CAAC;IAEO,cAAc;QACpB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;YAC1C,MAAM,cAAc,GAAmB,OAAO,CAAC,MAAM,EAAE,CAAC;YACxD,MAAM,SAAS,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;YAEtC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAkB,EAAE,EAAE;gBAC5E,yBAAyB,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;oBAC9C,MAAM,IAAI,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;oBAElD,IAAI,IAAc,CAAC;oBAEnB,QAAQ,IAAI,EAAE,CAAC;wBACb,KAAK,QAAQ;4BACX,IAAI,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;4BAClD,MAAM;wBACR,KAAK,KAAK;4BACR,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;4BAC/C,MAAM;wBACR,KAAK,MAAM;4BACT,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;4BAChD,MAAM;wBACR,KAAK,KAAK;4BACR,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;4BAC/C,MAAM;wBACR;4BACE,oCAAoC;4BACpC,OAAO;oBACX,CAAC;oBAED,IAAI,CAAC;wBACH,IAAI,CACF,IAAI,IAAI,EAAE,EACV,WAAW,EACX,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAClD,CAAC;oBACJ,CAAC;oBAAC,OAAO,KAAU,EAAE,CAAC;wBACpB,IAAI,KAAK,YAAY,YAAY,EAAE,CAAC;4BAClC,OAAO;wBACT,CAAC;wBAED,MAAM,KAAK,CAAC;oBACd,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,QAAQ,EAAE,EAAE,cAAc,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,UAAU;QAChB,OAAO,CAAC,IAAqB,EAAE,GAAqB,EAAE,IAAc,EAAE,EAAE;YACtE,GAAG,CAAC,MAAM,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;YAC5C,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC;YAChD,GAAG,CAAC,MAAM,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;YAChD,GAAG,CAAC,MAAM,CAAC,yBAAyB,EAAE,SAAS,CAAC,CAAC;YAEjD,IAAI,EAAE,CAAC;QACT,CAAC,CAAC;IACJ,CAAC;IAEO,kBAAkB;QACxB,OAAO,CAAC,KAAY,EAAE,IAAqB,EAAE,GAAqB,EAAE,IAAc,EAAE,EAAE;YACpF,IAAI,KAAK,YAAY,SAAS,EAAE,CAAC;gBAC/B,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAEjD,OAAO,IAAI,EAAE,CAAC;YAChB,CAAC;YAED,MAAM,OAAO,GAAoC,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC;YAE9E,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;gBACrB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;gBACtB,sCAAsC;gBACtC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACvB,CAAC;YAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE9B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE,CAAC;YAC3B,OAAO,MAAM,CAAC,UAAU,CAAC,CAAC;QAC5B,CAAC;QAED,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAEO,eAAe;QACrB,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC;IAC/C,CAAC;IAEO,SAAS;QACf,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC;IAC/C,CAAC;IAEO,eAAe,CAAC,QAAkB,EAAE,SAAiB;QAC3D,OAAO,CAAO,GAAoB,EAAE,GAAqB,EAA6B,EAAE;YACtF,IAAI,MAAgB,CAAC;YAErB,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7C,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACrC,QAAQ,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAEjD,IAAI,SAAmB,CAAC;YAExB,QAAQ,SAAS,EAAE,CAAC;gBAClB,KAAK,OAAO;oBACV,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC1C,MAAM;gBACR,KAAK,QAAQ;oBACX,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC3C,MAAM;gBACR,KAAK,OAAO;oBACV,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC1C,MAAM;gBACR,KAAK,UAAU;oBACb,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC7C,MAAM;gBACR;oBACE,MAAM,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC;YAC3C,CAAC;YAED,IAAI,CAAC;gBACH,MAAM,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC;YAAC,OAAO,KAAU,EAAE,CAAC;gBACpB,IAAI,KAAK,YAAY,YAAY,EAAE,CAAC;oBAClC,MAAM,KAAK,CAAC;gBACd,CAAC;gBAED,IAAI,CAAC,CAAC,KAAK,YAAY,SAAS,CAAC,EAAE,CAAC;oBAClC,wCAAwC;oBACxC,KAAK,GAAG,IAAI,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBACvC,CAAC;gBAED,MAAM,GAAG;oBACP,MAAM,EAAE,KAAK,CAAC,UAAU;oBACxB,IAAI,EAAE,KAAK,CAAC,OAAO;iBACpB,CAAC;YACJ,CAAC;YAED,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC,CAAA,CAAC;IACJ,CAAC;CACF;AAED,eAAe,cAAc,CAAC","sourcesContent":["import cors from 'cors';\nimport express from 'express';\nimport morgan from 'morgan';\nimport 'express-async-errors';\n\nimport { Monopoly } from '../boardGame';\nimport { TokenNotUsed } from '../boardGame/errors';\nimport { Response } from '../boardGame/types';\n\nimport MoviesFreakAPI from './v1/resources';\nimport Presenters from './v1/presenters';\nimport { HTTPError, HTTPInternalError } from './httpResponses';\nimport { IMDBGateway } from '../types/app';\nimport { Database } from '../types/database';\n\nclass TokenNotSupported extends Error {}\nclass PlayNotSupported extends Error {}\n\ninterface EndpointParams {\n  path: string;\n  resourceInstance: Monopoly;\n  middlewares: Function[];\n}\n\nconst RESOURCE_EVENTS_SUPPORTED = [\n  'onPost',\n  'onGet',\n  'onPut',\n  'onPatch',\n  'onDelete'\n];\n\ninterface Endpoints {\n  [resource: string]: EndpointParams[];\n};\n\nconst ENDPOINTS: Endpoints = {};\n\nclass MoviesFreakApp {\n  private app: express.Application;\n  readonly database: Database;\n  readonly imdb: IMDBGateway;\n  private presenters: Presenters;\n  private router: express.Router;\n\n  constructor(database: Database, imdbGateway: IMDBGateway) {\n    this.app = express();\n\n    this.database = database;\n    this.imdb = imdbGateway;\n    this.presenters = new Presenters();\n\n    this.router = express.Router();\n  }\n\n  build() {\n    this.app.use(express.json());\n    this.app.use(cors());\n    this.app.use(this.setHeaders());\n\n    if (!this.isTestEnv()) {\n      this.app.use(this.setRequestLogger());\n    }\n\n    this.buildAPI();\n    this.buildEndpoints();\n\n    this.app.use('/movies-freak/api', this.router);\n    this.app.use(this.setUnexpectedError());\n\n    this.app.disable('x-powered-by');\n\n    return this;\n  }\n\n  start(host: string, port: number) {\n    this.app.listen(port, host, () => {\n      // eslint-disable-next-line no-console\n      console.log(`Movies Freak Server listening on ${host}:${port}`);\n    });\n\n    return this;\n  }\n\n  getExpressApp() {\n    return this.app;\n  }\n\n  getDatabase() {\n    return this.database;\n  }\n\n  getIMDBAccess() {\n    return this.imdb;\n  }\n\n  private buildAPI() {\n    const moviesFreakAPI = new MoviesFreakAPI(this);\n\n    moviesFreakAPI.buildAPI();\n  }\n\n  registerResource(resourcePath: string, resourceInstance: Monopoly, middlewares: Function[] = []) {\n    const [resource, path = ''] = resourcePath.split('/');\n\n    if (!ENDPOINTS[resource]) {\n      ENDPOINTS[resource] = [];\n    }\n\n    ENDPOINTS[resource].push({\n      path,\n      resourceInstance,\n      middlewares\n    });\n  }\n\n  private buildEndpoints() {\n    Object.keys(ENDPOINTS).forEach((resource) => {\n      const resourceRouter: express.Router = express.Router();\n      const endpoints = ENDPOINTS[resource];\n\n      endpoints.forEach(({ path, resourceInstance, middlewares }: EndpointParams) => {\n        RESOURCE_EVENTS_SUPPORTED.forEach((eventName) => {\n          const verb = eventName.substring(2).toLowerCase();\n\n          let play: Function;\n\n          switch (verb) {\n            case 'delete':\n              play = resourceRouter.delete.bind(resourceRouter);\n              break;\n            case 'get':\n              play = resourceRouter.get.bind(resourceRouter);\n              break;\n            case 'post':\n              play = resourceRouter.post.bind(resourceRouter);\n              break;\n            case 'put':\n              play = resourceRouter.put.bind(resourceRouter);\n              break;\n            default:\n              // throw new PlayNotSupported(verb);\n              return;\n          }\n\n          try {\n            play(\n              `/${path}`,\n              middlewares,\n              this.buildController(resourceInstance, eventName)\n            );\n          } catch (error: any) {\n            if (error instanceof TokenNotUsed) {\n              return;\n            }\n\n            throw error;\n          }\n        });\n      });\n\n      this.router.use(`/v1/${resource}`, resourceRouter);\n    });\n  }\n\n  private setHeaders() {\n    return (_req: express.Request, res: express.Response, next: Function) => {\n      res.append('X-Frame-Options', 'SAMEORIGIN');\n      res.append('X-XSS-Protection', '1; mode=block');\n      res.append('X-Content-Type-Options', 'nosniff');\n      res.append('Content-Security-Policy', 'nosniff');\n\n      next();\n    };\n  }\n\n  private setUnexpectedError() {\n    return (error: Error, _req: express.Request, res: express.Response, next: Function) => {\n      if (error instanceof HTTPError) {\n        res.status(error.statusCode).send(error.payload);\n\n        return next();\n      }\n\n      const payload: { code: string; error?: Error } = { code: 'UNEXPECTED_ERROR' };\n\n      if (this.isTestEnv()) {\n        payload.error = error;\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n\n      res.status(500).send(payload);\n\n      return next(error);\n    };\n  }\n\n  private setRequestLogger() {\n    if (this.isProductionEnv()) {\n      return morgan('combined');\n    }\n\n    return morgan('dev');\n  }\n\n  private isProductionEnv() {\n    return process.env.NODE_ENV === 'production';\n  }\n\n  private isTestEnv() {\n    return process.env.NODE_ENV !== 'production';\n  }\n\n  private buildController(resource: Monopoly, tokenName: string) {\n    return async (req: express.Request, res: express.Response): Promise<express.Response> => {\n      let result: Response;\n\n      resource.setTitle('database', this.database);\n      resource.setTitle('imdb', this.imdb);\n      resource.setTitle('presenters', this.presenters);\n\n      let moveToken: Function;\n\n      switch (tokenName) {\n        case 'onGet':\n          moveToken = resource.onGet.bind(resource);\n          break;\n        case 'onPost':\n          moveToken = resource.onPost.bind(resource);\n          break;\n        case 'onPut':\n          moveToken = resource.onPut.bind(resource);\n          break;\n        case 'onDelete':\n          moveToken = resource.onDelete.bind(resource);\n          break;\n        default:\n          throw new TokenNotSupported(tokenName);\n      }\n\n      try {\n        result = await moveToken(req);\n      } catch (error: any) {\n        if (error instanceof TokenNotUsed) {\n          throw error;\n        }\n\n        if (!(error instanceof HTTPError)) {\n          // eslint-disable-next-line no-ex-assign\n          error = new HTTPInternalError(error);\n        }\n\n        result = {\n          status: error.statusCode,\n          data: error.payload\n        };\n      }\n\n      return res.status(result.status).send(result.data);\n    };\n  }\n}\n\nexport default MoviesFreakApp;\n"]}